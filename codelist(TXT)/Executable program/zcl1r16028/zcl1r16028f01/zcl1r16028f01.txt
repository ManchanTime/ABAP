*&---------------------------------------------------------------------*
*& Include          ZCL1R16028F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form set_hkont_text
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_hkont_text .
*-- Function call
  CLEAR : gv_txt50, gv_subrc, gv_message.
  CALL FUNCTION 'ZFM_CL1_16_02'
    EXPORTING
      iv_hkont             = pa_hkont
      iv_ktopl             = pa_ktopl
      iv_langu             = pa_langu
    IMPORTING
      ev_txt50             = gv_txt50
      ev_message           = gv_message
      ev_subrc             = gv_subrc
    EXCEPTIONS
      invalid_account_code = 1
      OTHERS               = 2.

*-- 1. Function# subrc# ### ## ##
  IF gv_subrc = 0.
* Implement suitable error handling here
    MESSAGE s000 WITH gv_message.
    WRITE : / gv_txt50, gv_message, gv_subrc.
    SKIP 1.
  ELSE.
    MESSAGE s000 WITH gv_message DISPLAY LIKE 'E'.
  ENDIF.

*-- 2. Function# subrc# ### ## ### ### ####
*  IF gv_txt50 IS NOT INITIAL.
*    MESSAGE s000 WITH gv_message.
*    WRITE : / gv_txt50, gv_message, gv_subrc.
*  ELSE.
*    MESSAGE s000 WITH gv_message DISPLAY LIKE 'E'.
*    STOP.
*  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_maktx
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_maktx .
  CLEAR : gv_maktx, gv_message.
  CALL FUNCTION 'ZFM_CL1_16_03'
    EXPORTING
      iv_matnr   = pa_matnr
      iv_langu   = pa_langu
    IMPORTING
      ev_maktx   = gv_maktx
      ev_message = gv_message
    EXCEPTIONS
      not_found  = 1
      OTHERS     = 2.

  IF gv_maktx IS NOT INITIAL.
    MESSAGE s000 WITH gv_message.
    WRITE : / gv_maktx, gv_message.
    SKIP 1.
  ELSE.
    MESSAGE s000 WITH gv_message DISPLAY LIKE 'E'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_antxt
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_antxt .
  CLEAR : gv_antxt, gv_message.
  CALL FUNCTION 'ZFM_CL1_16_04'
    EXPORTING
      iv_stlan   = pa_stlan
      iv_langu   = pa_langu
    IMPORTING
      ev_antxt   = gv_antxt
      ev_message = gv_message
    EXCEPTIONS
      not_found  = 1
      OTHERS     = 2.
  IF gv_antxt IS NOT INITIAL.
    WRITE : / gv_antxt, gv_message.
    SKIP 1.
    MESSAGE s000 WITH gv_message.
  ELSE.
    MESSAGE s000 WITH gv_message DISPLAY LIKE 'E'.
  ENDIF.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.4.6 - E.G.Mellodew. 1998-2025. Sap Release 754
