*&---------------------------------------------------------------------*
*& Include          ZRCL1TEST_16_01F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form get_base_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_base_data .

  CLEAR gt_body.
  SELECT box_code tool_code tool_name anln1 check_box tool_pos  " Select-Options# ## ### ####
         erdat ernam erzet aedat aenam aezet                    " Timestamp ###
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM ztcl1_test_16
    WHERE box_code  IN so_box
      AND tool_code IN so_tool.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_screen_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_screen_0100 .

*-- Container ### #### ####
  IF go_container IS NOT BOUND.

    CLEAR : gt_fcat, gs_fcat.
*-- ## #### ##
    PERFORM set_fcat USING : 'X' 'BOX_CODE'  'ZTCL1_TEST_16' 'C' ' ',
                             'X' 'TOOL_CODE' 'ZTCL1_TEST_16' 'C' ' ',
                             ' ' 'TOOL_NAME' 'ZTCL1_TEST_16' ' ' 'X',
                             ' ' 'ANLN1'     'ZTCL1_TEST_16' ' ' ' ',
                             ' ' 'CHECK_BOX' 'ZTCL1_TEST_16' 'C' ' ',
                             ' ' 'TOOL_POS'  'ZTCL1_TEST_16' 'C' ' '.
*-- Layout ##
    PERFORM set_layout.
*-- #### AVL toolbar ##
    PERFORM exclude_toolbar.
*-- Container, alv_grid ## ##
    PERFORM create_object.

*-- ### ## ## ### ##
    SET HANDLER lcl_event_handler=>modify_value FOR go_alv_grid.
*-- ALV grid ## ### ##
    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        is_variant           = gs_variant
        i_save               = 'A'
        i_default            = 'X'
        is_layout            = gs_layout
        it_toolbar_excluding = gt_ui_functions
      CHANGING
        it_outtab            = gt_body
        it_fieldcatalog      = gt_fcat.

*-- ## ## ## ### ##
    PERFORM register_event.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_fcat
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_fcat USING pv_key pv_field pv_table pv_just pv_emph.

*-- field catalog ##
  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-ref_table = pv_table.
  gs_fcat-just      = pv_just.
  gs_fcat-emphasize = pv_emph.

*-- Check box ## ##
  CASE pv_field.
    WHEN 'CHECK_BOX'.
      gs_fcat-checkbox = abap_true.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_layout .

  gs_layout-zebra      = abap_true.  " ### ##
  gs_layout-cwidth_opt = 'A'.        " ## ### ### ## ## ## ##
  gs_layout-sel_mode   = 'D'.        " ## # ## ##
  gs_layout-stylefname = 'CELL_TAB'. " Style ## ##

  gs_variant-report = sy-repid.      " report ##
  gs_variant-handle = 'ALV1'.        " ID ##

ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_object
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_object .

*-- Docking container ##
  CREATE OBJECT go_container
    EXPORTING
      side      = go_container->dock_at_left
      extension = 5000.

*-- ALV Grid ##
  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form exclude_toolbar
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM exclude_toolbar .

*-- #### ## ## ITAB# ##
  DATA : ls_ui_functions TYPE ui_func.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_undo.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_copy.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_copy_row.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_cut.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_delete_row.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_insert_row.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_append_row.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_paste.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_loc_paste_new_row.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_refresh.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_auf.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_average.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_print.
  APPEND ls_ui_functions TO gt_ui_functions.
  ls_ui_functions = cl_gui_alv_grid=>mc_fc_graph.
  APPEND ls_ui_functions TO gt_ui_functions.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_toggle
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_toggle .

*-- gv_mode# 1## Input ## 0## ###
  gv_mode = ( gv_mode + 1 ) MOD 2.              " gv_mode# 0### 1# 1### 0## ##
  go_alv_grid->set_ready_for_input( gv_mode ).  " gv_mode# ## Input ## ## ##

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_screen .

  DATA : ls_styl  TYPE lvc_s_styl,  " Style ## WA
         lv_tabix TYPE sy-tabix.    " ## Index ## ##

  CLEAR ls_styl.
  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.            " ## index ##
    CLEAR gs_body-cell_tab.
*-- ## Input ## ## ## Subroutine
    PERFORM set_input_mode USING ' '                                  " ## ## ## ##
                                 cl_gui_alv_grid=>mc_style_enabled
                                 ls_styl.

    PERFORM set_input_mode USING 'BOX_CODE'                           " PK ## ## ##
                                 cl_gui_alv_grid=>mc_style_disabled
                                 ls_styl.

    PERFORM set_input_mode USING 'TOOL_CODE'                          " PK ## ## ##
                                 cl_gui_alv_grid=>mc_style_disabled
                                 ls_styl.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING cell_tab.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_input_mode
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> CL_GUI_ALV_GRID=>MC_STYLE_ENAB
*&      --> LS_STYL
*&---------------------------------------------------------------------*
FORM set_input_mode USING pv_field                " ## ### ## INPUT ## ## ##
                          pv_style
                          ps_styl TYPE lvc_s_styl.

  ps_styl-fieldname = pv_field.               " ## ##
  ps_styl-style     = pv_style.               " Style ##(INPUT ## ##)
  INSERT ps_styl INTO TABLE gs_body-cell_tab. " ## Row# ##
  CLEAR ps_styl.                              " Style WA ###

ENDFORM.
*&---------------------------------------------------------------------*
*& Form insert_row
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM insert_row .

  DATA : ls_styl TYPE lvc_s_styl.

*-- DISPLAY Mode## # ## ### ##
  IF gv_mode = 0.
    MESSAGE s000 WITH TEXT-m01 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  CLEAR : gs_body, ls_styl.

*-- ## ### ##### ##
  gs_body-is_new = abap_true.
*-- Row ### ## ## ## Input ## ##
  PERFORM set_input_mode USING ' '
                               cl_gui_alv_grid=>mc_style_enabled
                               ls_styl.

*-- ## Row ##
  APPEND gs_body TO gt_body.

*-- ALV ##
  PERFORM refresh_table.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_table
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM refresh_table .

  DATA : ls_stbl TYPE lvc_s_stbl. " ## ## ## ## WA

  ls_stbl-row = abap_true.        " Row ##
  ls_stbl-col = abap_true.        " Col ##

  go_alv_grid->refresh_table_display( EXPORTING is_stable = ls_stbl ).  " ALV ##

ENDFORM.
*&---------------------------------------------------------------------*
*& Form delete_row
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM delete_row .

  DATA : lt_roid TYPE lvc_t_roid,             " ### # ## ITAB
         ls_roid TYPE lvc_s_roid.             " ### # ## WA

*-- DISPLAY Mode## # ## ### ##
  IF gv_mode = 0.
    MESSAGE s000 WITH TEXT-m01 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  CALL METHOD go_alv_grid->get_selected_rows  " ### # ## lt_roid ## Method
    IMPORTING
      et_row_no = lt_roid.

  IF lt_roid IS INITIAL.                      " ### ## ### EXIT
    MESSAGE s012 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  SORT lt_roid BY row_id DESCENDING.          " lt_roid ## ##

  CLEAR gt_body_d.
  LOOP AT lt_roid INTO ls_roid.

    CLEAR : gs_body, gs_body_d.
    READ TABLE gt_body INTO gs_body INDEX ls_roid-row_id. " ### ## Row ##

    IF sy-subrc = 0.
      IF gs_body-is_new <> abap_true.              " ## ### ROW# #### DB ## # DB# ##
        MOVE-CORRESPONDING gs_body TO gs_body_d.   " ### ### gs_body_d (## # WA)# ##
        APPEND gs_body_d TO gt_body_d.             " ## ### WA -> ITAB# ###
      ENDIF.
      DELETE gt_body INDEX ls_roid-row_id.         " ### # ##
    ENDIF.

  ENDLOOP.

  PERFORM refresh_table.  " AVL ##
ENDFORM.
*&---------------------------------------------------------------------*
*& Form save_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM save_data .

  DATA : lt_body_s TYPE TABLE OF ztcl1_test_16,
         lv_answer,
         lv_subrc  TYPE sy-subrc.

*-- ## ## ## (Data Changed Event ## ##)
  CALL METHOD go_alv_grid->check_changed_data.

*-- ## ## ### ##
  CLEAR gs_body.
  READ TABLE gt_body INTO gs_body WITH KEY modi_yn = abap_true.
  IF ( sy-subrc <> 0 ) AND
     ( gt_body_d IS INITIAL ).
    MESSAGE s011 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

*-- ## ## POP UP
  PERFORM popup_dialog CHANGING lv_answer.
  CHECK lv_answer = '1'.  " ## ### 1# #### EXIT

*-- Timestamp ##
  PERFORM set_timestamp.

*-- Delete data
  DELETE ztcl1_test_16 FROM TABLE gt_body_d.
  lv_subrc = sy-subrc.  " ### # ### ##

*-- Save data
  CLEAR lt_body_s.
  MOVE-CORRESPONDING gt_body TO lt_body_s.    " ## Table ### ## ITAB## ### ##
  MODIFY ztcl1_test_16 FROM TABLE lt_body_s.

*-- ##### Commit ### Rollback
  IF ( sy-subrc = 0 ) AND
     ( lv_subrc = 0 ).
    COMMIT WORK.
    MESSAGE s004.
  ELSE.
    ROLLBACK WORK.
    MESSAGE s006 DISPLAY LIKE 'E'.
  ENDIF.

  PERFORM set_screen.     " ### Row# ## Row## PK ###
  PERFORM refresh_table.  " AVL ##
  PERFORM set_toggle.     " ##### INPUT ## ### ##

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_modify_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_MODIFIED
*&      --> ET_GOOD_CELLS
*&---------------------------------------------------------------------*
FORM handle_modify_value USING pv_modified
                               pt_good_cells TYPE lvc_t_modi.

  DATA : ls_good_cells TYPE lvc_s_modi.

*-- ## ## ### EXIT
  CHECK pv_modified IS NOT INITIAL.

  CLEAR ls_good_cells.
  LOOP AT pt_good_cells INTO ls_good_cells.

*-- ### ROW ## ##
    CLEAR gs_body.
    READ TABLE gt_body INTO gs_body INDEX ls_good_cells-row_id.

*-- ### #### ## ## ## ##
    gs_body-modi_yn = abap_true.

*-- #### ITAB ##
    MODIFY gt_body FROM gs_body INDEX ls_good_cells-row_id
                                TRANSPORTING modi_yn.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form register_event
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM register_event .

  go_alv_grid->register_edit_event( go_alv_grid->mc_evt_modified ).
*  go_alv_grid->register_edit_event( go_alv_grid->mc_evt_enter ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_timestamp
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_timestamp .

  DATA : lv_tabix TYPE sy-tabix.

*-- Modi_yn = abap_true -> ### Row# ##
  LOOP AT gt_body INTO gs_body WHERE modi_yn = abap_true.

    lv_tabix = sy-tabix.

    IF gs_body-erdat IS INITIAL.  " ### #### ## Timestamp ### ##
      gs_body-erdat = sy-datum.
      gs_body-ernam = sy-uname.
      gs_body-erzet = sy-uzeit.
    ELSE.
      gs_body-aedat = sy-datum.   " ## #### ## Timestamp ### ##
      gs_body-aenam = sy-uname.
      gs_body-aezet = sy-uzeit.
    ENDIF.

    CLEAR gs_body-modi_yn.        " ### #### #### ### modi_yn ###
    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING         " ### # ##
                                                  erdat ernam erzet
                                                  aedat aenam aezet
                                                  modi_yn.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form popup_dialog
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- LV_CHECK
*&---------------------------------------------------------------------*
FORM popup_dialog CHANGING pv_answer.

*-- ## ##### ##
  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar       = 'Save Question'
      text_question  = 'Save Ok?'
      text_button_1  = 'Yes'
      icon_button_1  = 'ICON_OKAY'
      text_button_2  = 'No'
      icon_button_2  = 'ICON_CANCEL'
      default_button = '1'
    IMPORTING
      answer         = pv_answer.   " ## ## # 1## OK ### NO

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.4.6 - E.G.Mellodew. 1998-2025. Sap Release 754
